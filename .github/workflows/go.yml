name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debugging - List entire directory
        run: |
          pwd
          ls -la
          find . -type d -name "plateforme-mys3"

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: |
          go mod download
        working-directory: ./plateforme-mys3

      - name: Run tests
        run: go test ./cmd/... -v
        working-directory: ./plateforme-mys3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        working-directory: ./plateforme-mys3
        run: |
          docker build -t ridhabucket/moto:${{ github.sha }} .

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          docker tag ridhabucket/moto:${{ github.sha }} ridhabucket/moto:latest
          docker push ridhabucket/moto:${{ github.sha }}
          docker push ridhabucket/moto:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0'

      - name: Create .kube directory
        run: mkdir -p ~/.kube

      - name: Set up Kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" | base64 --decode > ~/.kube/config

      - name: Debugging - List entire directory
        run: |
          pwd
          ls -la
          find . -type d -name "plateforme-mys3"

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/moto moto-container=ridhabucket/moto:latest
          kubectl rollout status deployment/moto

      - name: Apply Ingress
        working-directory: ./plateforme-mys3
        run: kubectl apply -f ingress.yaml
