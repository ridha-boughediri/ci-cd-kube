name: Go Docker CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20' # Utilise la version de Go souhait√©e

      - name: Install dependencies
        run: go mod download

      - name: Build the Go application
        run: go build -v ./...

      - name: Test the Go application
        run: go test -v ./...

  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: go mod tidy

      - name: Build the Docker image
        run: docker build -t telephone .

      - name: Push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag telephone your-docker-repo/telephone:latest
          docker push your-docker-repo/telephone:latest

      - name: Notify Google Chat
        uses: 360kelvin/chat-notifier@v2.2.0
        with:
          webhook-url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          message: 'Build succeeded for ${{ github.event.head_commit.message }}'
